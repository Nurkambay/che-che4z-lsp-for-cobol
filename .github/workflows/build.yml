name: Build lsp-for-cobol
on:
  push:
#     branches: [ master ]
  pull_request:
#     branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        buildDir: [.githubActionBuild]
        extension: [clients/cobol-lsp-vscode-extension]
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - run: mvn -B package --file com.ca.lsp.cobol/pom.xml
    - name: Sonar scan
      working-directory: com.ca.lsp.cobol
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: > 
        mvn sonar:sonar -Dsonar.projectKey=eclipse_che-che4z-lsp-for-cobol -Dsonar.organization=eclipse -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.branch.name=${{env.BRANCH_NAME}}


    - run: cp com.ca.lsp.cobol/lsp-service-cobol/target/lsp-service-cobol-*.jar ${{matrix.extension}}/server/
    - name: Use Node.js 
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: npm ci 
      working-directory: ${{ matrix.extension }}
      run: node -v; npm ci
    - name: npx vsce package
      working-directory: ${{ matrix.extension }}
      run: npx vsce package; ls -la
    - name: copy
      env: 
        buildDir: ${{ matrix.buildDir }}
      run: mkdir ${buildDir} ; cp ${{matrix.extension}}/*.vsix ${buildDir} ; ls ${buildDir}
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
          name: che-che4z-lsp-for-cobol
          path: ${{ matrix.buildDir }}
          
    

